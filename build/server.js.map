{"version":3,"sources":["../src/server.js"],"names":["mongoose","connect","useNewUrlParser","useUnifiedTopology","useFindAndModify","then","console","log","app","use","bodyParser","json","express","static","path","join","__dirname","get","req","res","articleName","params","name","Articles","findOne","error","article","send","post","findOneAndUpdate","$inc","upvotes","err","found","save","status","body","username","text","foundArticle","comments","push","sendFile","port","process","env","PORT","listen"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEAA,mBACGC,OADH,CAEI,+FAFJ,EAGI,EAAEC,iBAAiB,IAAnB,EAAyBC,oBAAoB,IAA7C,EAAmDC,kBAAkB,KAArE,EAHJ,EAKGC,IALH,CAKQ;AAAA,SAAMC,QAAQC,GAAR,CAAY,gCAAZ,CAAN;AAAA,CALR;AAMA,IAAMC,MAAM,wBAAZ;AACAA,IAAIC,GAAJ,CAAQ,qBAAR;AACAD,IAAIC,GAAJ,CAAQC,qBAAWC,IAAX,EAAR;AACAH,IAAIC,GAAJ,CAAQG,kBAAQC,MAAR,CAAeC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,qBAArB,CAAf,CAAR;AACAR,IAAIS,GAAJ,CAAQ,qBAAR,EAA+B,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC3C,MAAMC,cAAcF,IAAIG,MAAJ,CAAWC,IAA/B;AACAC,0BAASC,OAAT,CAAiB,EAAEF,MAAMF,WAAR,EAAjB,EAAwC,UAACK,KAAD,EAAQC,OAAR,EAAoB;AAC1D,QAAI,CAACD,KAAL,EAAY;AACVN,UAAIQ,IAAJ,CAASD,OAAT;AACD,KAFD,MAEO;AACLpB,cAAQC,GAAR,CAAYkB,KAAZ;AACD;AACF,GAND;AAOD,CATD;;AAWAjB,IAAIoB,IAAJ,CAAS,4BAAT,EAAuC,UAACV,GAAD,EAAMC,GAAN,EAAc;AACnD,MAAMC,cAAcF,IAAIG,MAAJ,CAAWC,IAA/B;;AAEAC,0BAASM,gBAAT,CACE,EAAEP,MAAMF,WAAR,EADF,EAEE,EAAEU,MAAM,EAAEC,SAAS,CAAX,EAAR,EAFF,EAGE,UAACC,GAAD,EAAMC,KAAN,EAAgB;AACd,QAAID,GAAJ,EAAS;AACP1B,cAAQC,GAAR,CAAYyB,GAAZ;AACD,KAFD,MAEO;AACLC,YAAMC,IAAN;AACA5B,cAAQC,GAAR,CAAY0B,KAAZ;AACAd,UAAIgB,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqBM,KAArB;AACD;AACF,GAXH;AAaD,CAhBD;AAiBAzB,IAAIoB,IAAJ,CAAS,iCAAT,EAA4C,UAACV,GAAD,EAAMC,GAAN,EAAc;AAAA,kBAC7BD,IAAIkB,IADyB;AAAA,MAChDC,QADgD,aAChDA,QADgD;AAAA,MACtCC,IADsC,aACtCA,IADsC;;AAExD,MAAMlB,cAAcF,IAAIG,MAAJ,CAAWC,IAA/B;AACAC,0BAASC,OAAT,CAAiB,EAAEF,MAAMF,WAAR,EAAjB,EAAwC,UAACY,GAAD,EAAMO,YAAN,EAAuB;AAC7D,QAAIP,GAAJ,EAAS;AACP1B,cAAQC,GAAR,CAAYyB,GAAZ;AACD,KAFD,MAEO;AACLO,mBAAaC,QAAb,CAAsBC,IAAtB,CAA2B,EAAEJ,kBAAF,EAAYC,UAAZ,EAA3B;AACAC,mBAAaL,IAAb;AACAf,UAAIQ,IAAJ,CAASY,YAAT;AACD;AACF,GARD;AASD,CAZD;AAaA/B,IAAIS,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,MAAIuB,QAAJ,CAAa5B,eAAKC,IAAL,CAAUC,SAAV,EAAqB,gCAArB,CAAb;AACD,CAFD;AAGA,IAAI2B,OAAOC,QAAQC,GAAR,CAAYC,IAAvB;AACA,IAAIH,QAAQ,IAAR,IAAgBA,QAAQ,EAA5B,EAAgC;AAC9BA,SAAO,IAAP;AACD;;AAEDnC,IAAIuC,MAAJ,CAAWJ,IAAX,EAAiB;AAAA,SAAMrC,QAAQC,GAAR,CAAY,iCAAZ,CAAN;AAAA,CAAjB","file":"server.js","sourcesContent":["import express from \"express\";\nimport bodyParser from \"body-parser\";\nimport mongoose from \"mongoose\";\nimport path from \"path\";\nimport cors from \"cors\";\nimport Articles from \"./models/ArticleSchema\";\n\nmongoose\n  .connect(\n    \"mongodb+srv://Tarun:tarun0508@cluster0-2qgfp.mongodb.net/blog-app?retryWrites=true&w=majority\",\n    { useNewUrlParser: true, useUnifiedTopology: true, useFindAndModify: false }\n  )\n  .then(() => console.log(\"MongoDb connected successfully\"));\nconst app = express();\napp.use(cors());\napp.use(bodyParser.json());\napp.use(express.static(path.join(__dirname, \"../../my-blog/build\")));\napp.get(\"/api/articles/:name\", (req, res) => {\n  const articleName = req.params.name;\n  Articles.findOne({ name: articleName }, (error, article) => {\n    if (!error) {\n      res.send(article);\n    } else {\n      console.log(error);\n    }\n  });\n});\n\napp.post(\"/api/articles/:name/upvote\", (req, res) => {\n  const articleName = req.params.name;\n\n  Articles.findOneAndUpdate(\n    { name: articleName },\n    { $inc: { upvotes: 1 } },\n    (err, found) => {\n      if (err) {\n        console.log(err);\n      } else {\n        found.save();\n        console.log(found);\n        res.status(200).send(found);\n      }\n    }\n  );\n});\napp.post(\"/api/articles/:name/add-comment\", (req, res) => {\n  const { username, text } = req.body;\n  const articleName = req.params.name;\n  Articles.findOne({ name: articleName }, (err, foundArticle) => {\n    if (err) {\n      console.log(err);\n    } else {\n      foundArticle.comments.push({ username, text });\n      foundArticle.save();\n      res.send(foundArticle);\n    }\n  });\n});\napp.get(\"*\", (req, res) => {\n  res.sendFile(path.join(__dirname, \"../../my-blog/build/index.html\"));\n});\nlet port = process.env.PORT;\nif (port == null || port == \"\") {\n  port = 8000;\n}\n\napp.listen(port, () => console.log(\"Server has started successfully\"));\n"]}